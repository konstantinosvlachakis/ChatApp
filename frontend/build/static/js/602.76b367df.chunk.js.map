{"version":3,"file":"static/js/602.76b367df.chunk.js","mappings":"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","sources":["libs/utils.ts","pages/Profile/features/ConversationList.jsx","pages/Profile/api/fetchConversations.ts","pages/Profile/features/Sidebar.jsx","pages/Profile/features/ChatHeader.jsx","pages/Profile/features/Conversation.jsx","pages/Profile/features/EmojiPickerWrapper.jsx","pages/Profile/features/MessageInput.jsx","pages/Profile/features/ChatRoom.jsx","pages/Profile/api/deleteMessage.ts","components/Typography/Heading.tsx","components/Modals/Modal.tsx","libs/react-query.ts","pages/Profile/api/editProfile.ts","components/Images/DragDropImage.jsx","pages/Profile/page.jsx"],"sourcesContent":["import clsx, { ClassValue } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n    return twMerge(clsx(inputs));\r\n  }","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useUser } from \"../../../context/UserContext\";\r\nimport { fetchConversations } from \"../api/fetchConversations\"; // Import the fetchConversations function\r\nimport { BASE_URL_IMG } from \"../../../constants/constants\";\r\n\r\nfunction ConversationList({ onSelectConversation, activeConversationId }) {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const { user } = useUser();\r\n  const navigate = useNavigate(); // Use navigate for redirection\r\n\r\n  useEffect(() => {\r\n    // Use the centralized fetchConversations function\r\n    fetchConversations(setConversations, setError, navigate).finally(() =>\r\n      setLoading(false)\r\n    );\r\n  }, [navigate]);\r\n\r\n  if (loading) {\r\n    return <div>Loading conversations...</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div className=\"text-red-500\">{error}</div>;\r\n  }\r\n  return (\r\n    <div className=\"overflow-y-auto\">\r\n      {conversations.map((conversation) => {\r\n        const otherUser =\r\n          conversation.sender?.username === user?.username\r\n            ? conversation.receiver\r\n            : conversation.sender;\r\n\r\n        const imageSrc =\r\n          BASE_URL_IMG + (otherUser?.profile_image_url || \"\") ||\r\n          \"https://via.placeholder.com/50\";\r\n\r\n        return (\r\n          <div\r\n            key={conversation.id}\r\n            className={`flex items-center p-2 cursor-pointer ${\r\n              activeConversationId === conversation.id\r\n                ? \"bg-gray-300\"\r\n                : \"hover:bg-gray-200\"\r\n            }`}\r\n            onClick={() => onSelectConversation(conversation)}\r\n          >\r\n            <img\r\n              src={imageSrc}\r\n              alt={otherUser?.username || \"Participant\"}\r\n              className=\"w-12 h-12 rounded-full mr-3\"\r\n            />\r\n            <div className=\"flex-1\">\r\n              <p className=\"font-semibold\">\r\n                {otherUser?.username || \"Unknown Participant\"}\r\n              </p>\r\n              <p className=\"text-sm text-gray-500\">\r\n                {conversation.last_message?.text || \"No messages yet\"}{\" \"}\r\n                <span className=\"text-gray-400\">\r\n                  ({new Date(conversation.updated_at).toLocaleString()})\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConversationList;\r\n","import axios from \"axios\";\r\nimport { Conversation } from \"../types\";\r\nimport { NavigateFunction } from \"react-router-dom\";\r\nimport { BASE_URL } from \"../../../constants/constants\";\r\n\r\nexport const fetchConversations = async (\r\n  setConversations: React.Dispatch<React.SetStateAction<Conversation[]>>,\r\n  setError: React.Dispatch<React.SetStateAction<string | null>>,\r\n  navigate: NavigateFunction\r\n): Promise<void> => {\r\n  const token = sessionStorage.getItem(\"accessToken\");\r\n\r\n  if (!token) {\r\n    setError(\"Authentication token is missing. Please log in.\");\r\n    navigate(\"/login\"); // Redirect to login if no token\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await axios.get<Conversation[]>(\r\n      BASE_URL + \"/api/conversations/\",\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`, // Use Bearer for JWT tokens\r\n        },\r\n        withCredentials: true, // Include cookies if needed\r\n      }\r\n    );\r\n\r\n    setConversations(response.data); // Update state with fetched data\r\n    console.log(\"Conversations fetched successfully\");\r\n  } catch (error: any) {\r\n    if (axios.isAxiosError(error)) {\r\n      if (error.response?.status === 401) {\r\n        // Handle unauthorized access\r\n        sessionStorage.removeItem(\"accessToken\");\r\n        navigate(\"/login\");\r\n      } else {\r\n        setError(error.response?.data?.detail || \"Failed to fetch conversations\");\r\n      }\r\n    } else {\r\n      setError(\"An unexpected error occurred.\");\r\n    }\r\n    console.error(\"Error fetching conversations:\", error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ConversationList from \"./ConversationList\";\r\n\r\nfunction Sidebar({ onSelectConversation, activeConversationId }) {\r\n  return (\r\n    <div className=\"w-1/4 h-screen bg-white shadow-lg border-r flex flex-col\">\r\n      {/* Search Input */}\r\n      <div className=\"p-4 border-b\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search\"\r\n          className=\"w-full p-2 rounded-full border border-gray-300 outline-none focus:ring-2 focus:ring-blue-500\"\r\n        />\r\n      </div>\r\n\r\n      {/* Conversation List */}\r\n      <div className=\"flex-1 overflow-y-auto\">\r\n        <ConversationList\r\n          onSelectConversation={onSelectConversation}\r\n          activeConversationId={activeConversationId}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import { BASE_URL_IMG } from \"../../../constants/constants\";\r\nimport { useUser } from \"../../../context/UserContext\";\r\n\r\nconst ChatHeader = ({ conversation }) => {\r\n  const { user } = useUser();\r\n  const otherUser =\r\n    conversation.sender?.username === user?.username\r\n      ? conversation.receiver\r\n      : conversation.sender;\r\n  return (\r\n    <div className=\"p-4 border-b bg-white flex items-center\">\r\n      <img\r\n        src={BASE_URL_IMG + otherUser.profile_image_url}\r\n        alt={otherUser.username}\r\n        className=\"w-10 h-10 rounded-full mr-3\"\r\n      />\r\n      <h2 className=\"font-semibold text-lg\">{otherUser.username}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatHeader;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nconst Conversation = ({ messages, userId, onDeleteMessage }) => {\r\n  const [dropdownIndex, setDropdownIndex] = useState(null); // Tracks which message's dropdown is open\r\n  const messagesEndRef = useRef(null); // Ref for the end of the messages list\r\n\r\n  const toggleDropdown = (index) => {\r\n    setDropdownIndex((prevIndex) => (prevIndex === index ? null : index));\r\n  };\r\n\r\n  // Scroll to the last message whenever the messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"flex-1 p-4 bg-gray-50 flex flex-col overflow-y-auto scroll-container\">\r\n      {messages.length > 0 ? (\r\n        messages.map((msg, index) => {\r\n          const attachmentUrl = msg.attachment_url || msg.attachment;\r\n          const isImageMessage = !!attachmentUrl; // Check if there's an attachment\r\n          const isSentByUser = msg.sender?.id === userId; // Check if the message was sent by the user\r\n\r\n          return (\r\n            <div\r\n              key={index}\r\n              className={`relative max-w-fit ${\r\n                !isImageMessage && isSentByUser ? \"bg-blue-100\" : \"\"\r\n              } ${isImageMessage ? \"\" : \"px-4 py-2\"} mb-2 rounded-full ${\r\n                isSentByUser ? \"self-end\" : \"bg-gray-200 self-start\"\r\n              }`}\r\n            >\r\n              {isSentByUser && (\r\n                <div className=\"absolute -left-6 top-1/2 transform -translate-y-1/2 z-20 group\">\r\n                  <button\r\n                    className=\"text-gray-500 hover:text-gray-700 focus:outline-none\"\r\n                    onClick={() => toggleDropdown(index)}\r\n                  >\r\n                    <span className=\"inline-block w-1.5 h-1.5 bg-gray-500 rounded-full\"></span>\r\n                    <span className=\"inline-block w-1.5 h-1.5 bg-gray-500 rounded-full mx-0.5\"></span>\r\n                    <span className=\"inline-block w-1.5 h-1.5 bg-gray-500 rounded-full\"></span>\r\n                  </button>\r\n                  {dropdownIndex === index && (\r\n                    <div\r\n                      className=\"absolute right-full top-0 mr-2 mt-0 bg-white border shadow-lg rounded z-50 group-hover:block\"\r\n                      onMouseLeave={() => setDropdownIndex(null)}\r\n                      onMouseEnter={() => setDropdownIndex(index)}\r\n                    >\r\n                      <button\r\n                        onClick={() => {\r\n                          onDeleteMessage(msg.id);\r\n                          setDropdownIndex(null); // Close the dropdown after deleting\r\n                        }}\r\n                        className=\"block px-4 py-2 text-sm text-red-500 hover:bg-red-100\"\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n\r\n              {isImageMessage ? (\r\n                /\\.(jpeg|jpg|png|gif|mp4|webm)$/i.test(attachmentUrl) ? (\r\n                  <div className=\"w-40 h-40 rounded-full overflow-hidden bg-gray-200 flex items-center justify-center\">\r\n                    {attachmentUrl.match(/\\.(mp4|webm)$/i) ? (\r\n                      <video\r\n                        src={attachmentUrl}\r\n                        controls\r\n                        className=\"object-cover w-full h-full\"\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        src={attachmentUrl}\r\n                        alt=\"Attachment\"\r\n                        className=\"object-cover w-full h-full\"\r\n                      />\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <a\r\n                    href={attachmentUrl}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className=\"text-blue-500 underline\"\r\n                  >\r\n                    📎 View Attachment\r\n                  </a>\r\n                )\r\n              ) : (\r\n                <p>{msg.text || \"No content available\"}</p>\r\n              )}\r\n            </div>\r\n          );\r\n        })\r\n      ) : (\r\n        <div className=\"text-gray-500\">No messages yet!</div>\r\n      )}\r\n      {/* Add a reference to the end of the messages */}\r\n      <div ref={messagesEndRef}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Conversation;\r\n","import React, { useRef } from \"react\";\r\nimport \"emoji-picker-element\";\r\n\r\nexport const EmojiPickerWrapper = ({ onEmojiSelect }) => {\r\n  const pickerRef = useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    const picker = pickerRef.current;\r\n\r\n    const handleEmojiClick = (event) => {\r\n      if (onEmojiSelect) {\r\n        onEmojiSelect(event.detail.unicode);\r\n      }\r\n    };\r\n\r\n    if (picker) {\r\n      picker.addEventListener(\"emoji-click\", handleEmojiClick);\r\n    }\r\n\r\n    return () => {\r\n      if (picker) {\r\n        picker.removeEventListener(\"emoji-click\", handleEmojiClick);\r\n      }\r\n    };\r\n  }, [onEmojiSelect]);\r\n\r\n  return <emoji-picker ref={pickerRef}></emoji-picker>;\r\n};\r\n","import React, { useState, useRef } from \"react\";\r\nimport { EmojiPickerWrapper } from \"./EmojiPickerWrapper\";\r\nimport AttachFileIcon from \"@mui/icons-material/AttachFile\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport SettingsVoiceIcon from \"@mui/icons-material/SettingsVoice\";\r\n\r\nconst MessageInput = ({ onSendMessage, currentUser, onMessageReceived }) => {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [showPicker, setShowPicker] = useState(false);\r\n  const [previewImage, setPreviewImage] = useState(null);\r\n  const [attachedFile, setAttachedFile] = useState(null);\r\n  const emojiPickerRef = useRef(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const handleEmojiSelect = (emoji) => setMessage((prev) => prev + emoji);\r\n\r\n  const handleFileAttach = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    if (file.type.startsWith(\"image/\") || file.type.startsWith(\"video/\")) {\r\n      const imageUrl = URL.createObjectURL(file); // Generate preview URL\r\n      setPreviewImage(imageUrl); // Set the preview image\r\n      setAttachedFile(file); // Store the file for sending\r\n    } else {\r\n      alert(\"Please select a valid image or video file.\");\r\n    }\r\n    fileInputRef.current.value = null; // Reset input for re-selection\r\n  };\r\n\r\n  const handleSend = () => {\r\n    if (!message.trim() && !attachedFile) {\r\n      alert(\"Please enter a message or attach a file.\");\r\n      return;\r\n    }\r\n\r\n    onSendMessage(message, attachedFile, previewImage); // Send message\r\n    setMessage(\"\"); // Clear message input\r\n    if (previewImage) URL.revokeObjectURL(previewImage); // Cleanup Blob URL\r\n    setPreviewImage(null);\r\n    setAttachedFile(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4 border-t bg-white flex items-center relative\">\r\n      <button onClick={() => setShowPicker((prev) => !prev)} className=\"mr-2\">\r\n        😊\r\n      </button>\r\n      {showPicker && (\r\n        <div ref={emojiPickerRef} className=\"absolute bottom-16 left-0 z-50\">\r\n          <EmojiPickerWrapper onEmojiSelect={handleEmojiSelect} />\r\n        </div>\r\n      )}\r\n      <div className=\"relative flex w-1/2 items-center\">\r\n        <div className=\"flex items-center w-full p-2 border border-gray-300 rounded-lg\">\r\n          {previewImage && (\r\n            <div className=\"flex items-center space-x-2\">\r\n              <img\r\n                src={previewImage} // Display the preview image\r\n                alt=\"Preview\"\r\n                className=\"h-10 w-10 object-cover rounded\"\r\n              />\r\n              <button\r\n                onClick={() => {\r\n                  if (previewImage) URL.revokeObjectURL(previewImage); // Cleanup\r\n                  setPreviewImage(null);\r\n                  setAttachedFile(null);\r\n                }}\r\n                className=\"text-red-500 text-sm\"\r\n              >\r\n                ✕\r\n              </button>\r\n            </div>\r\n          )}\r\n          <input\r\n            type=\"text\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            placeholder=\"Type your message...\"\r\n            className=\"w-full outline-none\"\r\n          />\r\n        </div>\r\n        <AttachFileIcon\r\n          className=\"absolute right-10 text-gray-500 cursor-pointer\"\r\n          onClick={() => fileInputRef.current.click()}\r\n        />\r\n        <input\r\n          type=\"file\"\r\n          ref={fileInputRef}\r\n          style={{ display: \"none\" }}\r\n          onChange={handleFileAttach}\r\n        />\r\n        <SettingsVoiceIcon className=\"absolute right-2 text-gray-500 cursor-pointer\" />\r\n      </div>\r\n      <button type=\"button\" className=\"ml-3 text-blue-500\" onClick={handleSend}>\r\n        <SendIcon />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageInput;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport ChatHeader from \"./ChatHeader\";\r\nimport Conversation from \"./Conversation\";\r\nimport MessageInput from \"./MessageInput\";\r\nimport axios from \"axios\";\r\nimport { deleteMessage } from \"../api/deleteMessage\";\r\nimport { BASE_URL } from \"../../../constants/constants\";\r\n\r\nconst ChatRoom = ({ conversation, user }) => {\r\n  const [messages, setMessages] = useState(conversation.messages || []);\r\n  const [isOtherUserTyping, setIsOtherUserTyping] = useState(false);\r\n  const socket = useRef(null);\r\n  const typingTimeoutRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Initialize WebSocket connection\r\n    const roomName = conversation.id; // Use the appropriate value for room name\r\n    const url = `ws://localhost:8000/ws/socket-server/${roomName}/`;\r\n    socket.current = new WebSocket(url);\r\n\r\n    socket.current.onopen = () => {\r\n      console.log(\"WebSocket connection established.\");\r\n    };\r\n\r\n    socket.current.onmessage = (e) => {\r\n      const data = JSON.parse(e.data);\r\n      console.log(\"WebSocket message received:\", data);\r\n\r\n      if (data.type === \"chat\") {\r\n        // Ignore messages sent by the current user\r\n        if (data.senderId === user.user_id) return;\r\n\r\n        setMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          {\r\n            id: data.id,\r\n            text: data.message,\r\n            sender: { username: data.sender },\r\n            timestamp: new Date().toISOString(),\r\n          },\r\n        ]);\r\n      } else if (data.type === \"deleteMessage\") {\r\n        const messageIdToDelete = data.messageId;\r\n        setMessages((prevMessages) =>\r\n          prevMessages.filter((msg) => msg.id !== messageIdToDelete)\r\n        );\r\n      } else if (data.type === \"user_typing\") {\r\n        if (data.sender !== user.username) {\r\n          setIsOtherUserTyping(true);\r\n\r\n          // Hide typing indicator after 3 seconds of no updates\r\n          if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\r\n          typingTimeoutRef.current = setTimeout(() => {\r\n            setIsOtherUserTyping(false);\r\n          }, 3000);\r\n        }\r\n      } else if (data.type === \"user_stopped_typing\") {\r\n        if (data.sender !== user.username) {\r\n          setIsOtherUserTyping(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    socket.current.onerror = (error) => {\r\n      console.error(\"WebSocket error:\", error);\r\n    };\r\n\r\n    socket.current.onclose = () => {\r\n      console.log(\"WebSocket connection closed.\");\r\n    };\r\n\r\n    // Cleanup WebSocket connection\r\n    return () => {\r\n      socket.current.close();\r\n      if (typingTimeoutRef.current) clearTimeout(typingTimeoutRef.current);\r\n    };\r\n  }, [conversation.id, user.username]);\r\n\r\n  const handleSendMessage = async (newMessage, attachedFile, previewImage) => {\r\n    const formData = new FormData();\r\n    if (newMessage.trim()) {\r\n      formData.append(\"text\", newMessage);\r\n    }\r\n    if (attachedFile) {\r\n      formData.append(\"attachment\", attachedFile);\r\n    }\r\n\r\n    const tempMessage = {\r\n      id: Date.now(),\r\n      text: newMessage.trim() || null,\r\n      sender: { id: user.user_id, username: user.username },\r\n      timestamp: new Date().toISOString(),\r\n      attachment: null,\r\n      attachmentUrl: previewImage || null,\r\n    };\r\n\r\n    setMessages((prevMessages) => [...prevMessages, tempMessage]);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        BASE_URL + `/api/conversations/${conversation.id}/messages/`,\r\n        formData,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${sessionStorage.getItem(\"accessToken\")}`,\r\n            \"Content-Type\": \"multipart/form-data\",\r\n          },\r\n        }\r\n      );\r\n\r\n      const savedMessage = response.data;\r\n\r\n      // Emit the message to other users via WebSocket\r\n      socket.current.send(\r\n        JSON.stringify({\r\n          type: \"chat\",\r\n          id: savedMessage.id,\r\n          message: savedMessage.text,\r\n          sender: user.username,\r\n          senderId: user.user_id,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      setMessages((prevMessages) =>\r\n        prevMessages.filter((msg) => msg.id !== tempMessage.id)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleTyping = () => {\r\n    socket.current.send(\r\n      JSON.stringify({\r\n        type: \"user_typing\",\r\n        sender: user.username,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleStopTyping = () => {\r\n    socket.current.send(\r\n      JSON.stringify({\r\n        type: \"user_stopped_typing\",\r\n        sender: user.username,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDeleteMessage = async (messageId) => {\r\n    try {\r\n      // Optimistically remove the message from the UI\r\n      setMessages((prevMessages) =>\r\n        prevMessages.filter((msg) => msg.id !== messageId)\r\n      );\r\n      await deleteMessage(messageId);\r\n\r\n      // Notify other users about the deleted message via WebSocket\r\n      socket.current.send(\r\n        JSON.stringify({\r\n          type: \"deleteMessage\",\r\n          messageId,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Failed to delete message:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-screen overflow-y-hidden\">\r\n      <ChatHeader conversation={conversation} />\r\n      <Conversation\r\n        messages={messages}\r\n        userId={user.user_id}\r\n        onDeleteMessage={handleDeleteMessage}\r\n      />\r\n      {isOtherUserTyping && (\r\n        <div className=\"text-gray-500 text-sm p-2\">\r\n          The other user is typing...\r\n        </div>\r\n      )}\r\n      <MessageInput\r\n        onSendMessage={handleSendMessage}\r\n        onTyping={handleTyping}\r\n        onStopTyping={handleStopTyping}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"../../../constants/constants\";\r\n\r\nexport type DeleteMessageDTO = {\r\n  messageId: number;\r\n};\r\n\r\n/**\r\n * Deletes a message by its ID.\r\n * @param messageId - The ID of the message to delete.\r\n * @returns A promise that resolves when the message is successfully deleted.\r\n */\r\nexport const deleteMessage = async (messageId: number): Promise<{ messageId: number }> => {\r\n  try {\r\n    await axios.delete(BASE_URL + `/api/messages/${messageId}/delete/`, {\r\n      headers: {\r\n        Authorization: `Bearer ${sessionStorage.getItem(\"accessToken\")}`,\r\n      },\r\n    });\r\n    return { messageId };\r\n  } catch (error) {\r\n    console.error(\"Error deleting message:\", error);\r\n    throw error; // Rethrow the error for handling in the mutation\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport { cn } from \"../../libs/utils\";\r\n\r\n \r\nexport interface IHeadingProps {\r\n  className?: string;\r\n  children?: React.ReactNode;\r\n}\r\n \r\nfunction Heading({ children, className }: IHeadingProps) {\r\n  return <h1 className={cn('font-alegreyaSans-black text-primary text-4xl', className)}>{children}</h1>;\r\n}\r\n \r\nexport default Heading;\r\n ","import Modal from \"@mui/material/Modal\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { IconButton } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport Heading from \"../Typography/Heading\";\r\nimport { cn } from \"../../libs/utils\";\r\n\r\nexport interface IModalComponentProps {\r\n  title?: string | React.ReactNode;\r\n  children?: React.ReactNode;\r\n  open: boolean;\r\n  setOpen: (state: boolean) => void;\r\n  className?: string;\r\n  cypressTag?: string;\r\n  hideClose?: boolean;\r\n}\r\n\r\nexport default function ModalComponent({\r\n  title,\r\n  children,\r\n  open = false,\r\n  setOpen,\r\n  className,\r\n  cypressTag,\r\n  hideClose = false,\r\n}: IModalComponentProps) {\r\n  const handleClose = () => setOpen(false);\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        open={open}\r\n        data-cy={cypressTag}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n        className=\"flex justify-center items-center\"\r\n      >\r\n        <div className=\"relative text-primary\">\r\n          {!hideClose && (\r\n            <IconButton\r\n              onClick={() => setOpen(false)}\r\n              className=\"absolute top-5 right-5 text-pr z-20\"\r\n            >\r\n              <CloseIcon className=\"text-4xl\" />\r\n            </IconButton>\r\n          )}\r\n          <div\r\n            className={cn(\r\n              \"over bg-white w-fit min-w-[450px] min-h-5 p-5 max-w-[1200px] m-5 shadow-md overflow-auto tall:max-w-[auto] tall:max-h-[500px]\",\r\n              className\r\n            )}\r\n          >\r\n            {title && <Heading className=\"m-0\">{title}</Heading>}\r\n            {children}\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import { AxiosError } from 'axios';\r\nimport { QueryClient, UseQueryOptions, UseMutationOptions, DefaultOptions } from 'react-query';\r\nimport { PromiseValue } from 'type-fest';\r\n\r\nconst queryConfig: DefaultOptions = {\r\n  queries: {\r\n    useErrorBoundary: true,\r\n    refetchOnWindowFocus: false,\r\n    retry: false,\r\n  },\r\n};\r\n\r\nexport const queryClient = new QueryClient({ defaultOptions: queryConfig });\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport type ExtractFnReturnType<FnType extends (...args: any) => any> = PromiseValue<\r\n  ReturnType<FnType>\r\n>;\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport type QueryConfig<QueryFnType extends (...args: any) => any> = Omit<\r\n  UseQueryOptions<ExtractFnReturnType<QueryFnType>>,\r\n  'queryKey' | 'queryFn'\r\n>;\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport type MutationConfig<MutationFnType extends (...args: any) => any> = UseMutationOptions<\r\n  ExtractFnReturnType<MutationFnType>,\r\n  AxiosError,\r\n  Parameters<MutationFnType>[0]\r\n>;\r\n","import { useMutation, UseMutationOptions } from '@tanstack/react-query';\r\nimport axios, { AxiosError } from 'axios';\r\nimport { queryClient } from '../../../libs/react-query';\r\nimport { BASE_URL } from '../../../constants/constants';\r\n\r\ntype UserProfileDTO = {\r\n  username?: string;\r\n  nativeLanguage?: string;\r\n  profileImage?: string;\r\n  // Add other fields if needed\r\n};\r\n\r\n// Function to update the user's native language\r\nconst editProfile = async (userData: UserProfileDTO): Promise<UserProfileDTO> => {\r\n  const token = sessionStorage.getItem(\"accessToken\"); // Retrieve the token from local storage\r\n  const response = await axios.patch(\r\n    BASE_URL + \"/api/profile/edit/\",\r\n    userData,\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,  // Include the token in the header\r\n      },\r\n    }\r\n  );  \r\n  console.log(response.data)\r\n  return response.data;\r\n};\r\n\r\ntype UseEditProfileOptions = {\r\n  config?: UseMutationOptions<\r\n    UserProfileDTO,\r\n    AxiosError<unknown, any>,\r\n    UserProfileDTO,\r\n    { previousUserProfile?: UserProfileDTO }\r\n  >;\r\n};\r\n\r\nexport const useEditProfile = ({ config }: UseEditProfileOptions) => {\r\n  return useMutation({\r\n    mutationKey: ['editProfile'], // Explicitly setting mutationKey\r\n    mutationFn: editProfile,\r\n    onMutate: async (newData: UserProfileDTO) => {\r\n      // Snapshot the previous user data\r\n      const previousUserProfile = queryClient.getQueryData<UserProfileDTO>(['userProfile']);\r\n\r\n      // Optimistically update the user profile in the cache\r\n      queryClient.setQueryData<UserProfileDTO>(['userProfile'], (oldData) => ({\r\n        ...oldData,\r\n        ...newData,\r\n      }));\r\n\r\n      return { previousUserProfile };\r\n    },\r\n    onError: (error, newData, context) => {\r\n      // Rollback to the previous user profile data if mutation fails\r\n      if (context?.previousUserProfile) {\r\n        queryClient.setQueryData<UserProfileDTO>(['userProfile'], context.previousUserProfile);\r\n      }\r\n    },\r\n    onSuccess: () => {\r\n      // Invalidate the user profile query to refetch updated data\r\n      queryClient.invalidateQueries(['userProfile']);\r\n    },\r\n    ...config,\r\n  });\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nconst DragDropImage = ({ onImageDrop, initialImage }) => {\r\n  const [droppedImage, setDroppedImage] = useState(initialImage); // Stores the current image\r\n  const [isDraggingOver, setIsDraggingOver] = useState(false); // Tracks drag state\r\n  const [isZoomModalOpen, setIsZoomModalOpen] = useState(false); // Tracks zoom modal state\r\n  const handleDragOver = (event) => {\r\n    event.preventDefault();\r\n    setIsDraggingOver(true); // Set dragging state\r\n  };\r\n\r\n  const handleDragLeave = (event) => {\r\n    event.preventDefault();\r\n    setIsDraggingOver(false); // Reset dragging state\r\n  };\r\n\r\n  const handleDrop = (event) => {\r\n    event.preventDefault();\r\n    setIsDraggingOver(false); // Reset dragging state\r\n\r\n    const file = event.dataTransfer.files[0]; // Get the dropped file\r\n    if (file && file.type.startsWith(\"image/\")) {\r\n      const imageUrl = URL.createObjectURL(file); // Create a preview URL\r\n      setDroppedImage(imageUrl); // Update the state with the dropped image\r\n      if (onImageDrop) onImageDrop(file); // Notify parent of the dropped image\r\n    } else {\r\n      alert(\"Please drop a valid image file.\"); // Handle invalid files\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    const fileInput = document.getElementById(\"file-input\");\r\n    fileInput.click(); // Simulate a click on the hidden file input\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file && file.type.startsWith(\"image/\")) {\r\n      const imageUrl = URL.createObjectURL(file);\r\n      setDroppedImage(imageUrl);\r\n      if (onImageDrop) onImageDrop(file); // Notify parent\r\n    } else {\r\n      alert(\"Please select a valid image file.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`relative w-40 h-40 rounded-full overflow-hidden border-4 ${\r\n        isDraggingOver ? \"border-blue-500\" : \"border-gray-400\"\r\n      }`}\r\n      onDragOver={handleDragOver}\r\n      onDragLeave={handleDragLeave}\r\n      onDrop={handleDrop}\r\n    >\r\n      {/* Background Image */}\r\n      <img\r\n        src={initialImage}\r\n        alt=\"Profile\"\r\n        className=\"absolute top-0 left-0 w-full h-full object-cover cursor-pointer\"\r\n        onClick={() => setIsZoomModalOpen(true)} // Open zoom modal on click\r\n      />\r\n\r\n      {/* Overlay Text (Visible on Dragging) */}\r\n      {isDraggingOver && (\r\n        <div className=\"absolute top-0 left-0 w-full h-full bg-black bg-opacity-50 flex items-center justify-center\">\r\n          <p className=\"text-white text-lg font-semibold\">Drop Here</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Hidden File Input */}\r\n      <input\r\n        id=\"file-input\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        className=\"hidden\"\r\n        onChange={handleFileChange}\r\n      />\r\n\r\n      {/* Zoom Modal */}\r\n      {isZoomModalOpen && (\r\n        <div className=\"fixed top-0 left-0 w-full h-full bg-black bg-opacity-75 flex items-center justify-center z-50\">\r\n          <img\r\n            src={initialImage}\r\n            alt=\"Zoomed\"\r\n            className=\"w-auto max-w-full h-auto max-h-full\"\r\n          />\r\n          <button\r\n            className=\"absolute top-4 right-4 text-white text-xl font-bold\"\r\n            onClick={() => setIsZoomModalOpen(false)} // Close zoom modal\r\n          >\r\n            ✕\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Upload Button */}\r\n      <button\r\n        className=\"absolute bottom-2 right-2 bg-blue-500 text-white p-2 rounded-full shadow-md\"\r\n        onClick={handleClick} // Open file input dialog\r\n      >\r\n        📤\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragDropImage;\r\n","import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { fetchUserProfile } from \"./api/fetchUserProfile\";\r\nimport Sidebar from \"./features/Sidebar\";\r\nimport ChatRoom from \"./features/ChatRoom\";\r\nimport ModalComponent from \"../../components/Modals/Modal\";\r\nimport { useEditProfile } from \"./api/editProfile\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport DragDropImage from \"../../components/Images/DragDropImage\";\r\nimport { BASE_URL_IMG } from \"../../constants/constants\";\r\n\r\nconst ProfilePage = () => {\r\n  const [user, setUser] = useState({});\r\n  const [error, setError] = useState(null);\r\n  const [modalNameOpen, setModalNameOpen] = useState(false);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [activeConversation, setActiveConversation] = useState(null);\r\n  const editProfileMutation = useEditProfile({});\r\n  const navigate = useNavigate();\r\n  console.log(user.profile_image_url);\r\n\r\n  const imageUrl = user.profile_image_url\r\n    ? BASE_URL_IMG + user.profile_image_url.replace(/^\\/?media\\//, \"media/\")\r\n    : \"/default-avatar.png\";\r\n  console.log(imageUrl);\r\n  useEffect(() => {\r\n    fetchUserProfile(setUser, () => {}, setError, navigate);\r\n  }, [navigate]);\r\n\r\n  const handleImageDrop = useCallback((file) => {\r\n    console.log(\"Image dropped:\", file);\r\n  }, []);\r\n\r\n  const handleSaveName = async () => {\r\n    try {\r\n      await editProfileMutation.mutateAsync({ username: newName });\r\n      setUser((prev) => ({ ...prev, username: newName }));\r\n      setModalNameOpen(false);\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    sessionStorage.removeItem(\"accessToken\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const profileFields = [\r\n    { label: \"Name\", value: user.username || \"John Doe\" },\r\n    { label: \"Date of Birth\", value: user.date_of_birth || \"Not provided\" },\r\n    { label: \"Location\", value: user.location || \"Not specified\" },\r\n    { label: \"Native Language\", value: user.native_language || \"English\" },\r\n    {\r\n      label: \"Languages Practicing\",\r\n      value: user.languages || \"Spanish, French\",\r\n    },\r\n    {\r\n      label: \"Learning Goal\",\r\n      value: user.learningGoal || \"Become fluent for travel\",\r\n    },\r\n    { label: \"Date Joined\", value: user.dateJoined || \"January 1, 2023\" },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen bg-gray-100\">\r\n      {/* Sidebar */}\r\n      <Sidebar\r\n        onSelectConversation={setActiveConversation}\r\n        activeConversationId={activeConversation?.id}\r\n      />\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 relative p-6\">\r\n        {activeConversation ? (\r\n          <div className=\"flex flex-col h-full\">\r\n            <div className=\"absolute top-4 right-4\">\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"Back to Profile\"\r\n                onClick={() => setActiveConversation(null)}\r\n              >\r\n                <ArrowBackIcon />\r\n              </IconButton>\r\n            </div>\r\n            <ChatRoom conversation={activeConversation} user={user} />\r\n          </div>\r\n        ) : (\r\n          <div className=\"flex flex-col items-center space-y-6 w-full\">\r\n            {/* Sign Out Button */}\r\n            <button\r\n              className=\"absolute top-5 right-5 bg-red-500 text-white py-2 px-4 rounded-full hover:bg-red-600 transition\"\r\n              onClick={handleSignOut}\r\n            >\r\n              Sign Out\r\n            </button>\r\n\r\n            {/* Profile Image */}\r\n            <DragDropImage\r\n              onImageDrop={handleImageDrop}\r\n              initialImage={imageUrl}\r\n            />\r\n\r\n            {/* Edit Button */}\r\n            <button\r\n              className=\"bg-blue-500 text-white py-2 px-4 rounded-full hover:bg-blue-600 transition\"\r\n              onClick={() => setModalNameOpen(true)}\r\n            >\r\n              Edit\r\n            </button>\r\n\r\n            {/* Profile Details */}\r\n            <div className=\"w-full max-w-lg p-6 bg-white rounded-lg shadow-md\">\r\n              {profileFields.map(({ label, value }, index) => (\r\n                <div key={index} className=\"mb-4\">\r\n                  <h2 className=\"text-lg font-semibold text-gray-700\">\r\n                    {label}:\r\n                  </h2>\r\n                  <p className=\"text-gray-900\">{value}</p>\r\n                  {index < profileFields.length - 1 && (\r\n                    <hr className=\"border-gray-200 mt-2\" />\r\n                  )}\r\n                </div>\r\n              ))}\r\n              {error && <div className=\"text-red-500 mt-4\">{error}</div>}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Edit Name Modal */}\r\n      {modalNameOpen && (\r\n        <ModalComponent open={modalNameOpen} setOpen={setModalNameOpen}>\r\n          <h2 className=\"text-lg font-semibold mb-4\">Edit Name</h2>\r\n          <input\r\n            type=\"text\"\r\n            value={newName}\r\n            onChange={(e) => setNewName(e.target.value)}\r\n            className=\"w-full p-2 mb-4 border rounded focus:outline-none focus:ring focus:border-blue-300\"\r\n            placeholder=\"Enter new Name\"\r\n          />\r\n          <div className=\"flex justify-end space-x-2\">\r\n            <button\r\n              className=\"bg-gray-300 text-gray-800 py-1 px-4 rounded hover:bg-gray-400 transition\"\r\n              onClick={() => setModalNameOpen(false)}\r\n            >\r\n              Close\r\n            </button>\r\n            <button\r\n              className=\"bg-blue-500 text-white py-1 px-4 rounded hover:bg-blue-600 transition\"\r\n              onClick={handleSaveName}\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </ModalComponent>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"names":["cn","_len","arguments","length","inputs","Array","_key","twMerge","clsx","_ref","onSelectConversation","activeConversationId","conversations","setConversations","useState","error","setError","loading","setLoading","user","useUser","navigate","useNavigate","useEffect","async","token","sessionStorage","getItem","axios","get","BASE_URL","headers","Authorization","withCredentials","data","console","log","_error$response","_error$response2","_error$response2$data","isAxiosError","response","status","removeItem","detail","fetchConversations","finally","_jsx","children","className","map","conversation","_conversation$sender","_conversation$last_me","otherUser","sender","username","receiver","imageSrc","BASE_URL_IMG","profile_image_url","_jsxs","id","onClick","src","alt","last_message","text","Date","updated_at","toLocaleString","type","placeholder","ConversationList","messages","userId","onDeleteMessage","dropdownIndex","setDropdownIndex","messagesEndRef","useRef","_messagesEndRef$curre","current","scrollIntoView","behavior","msg","index","_msg$sender","attachmentUrl","attachment_url","attachment","isImageMessage","isSentByUser","prevIndex","toggleDropdown","onMouseLeave","onMouseEnter","test","match","controls","href","target","rel","ref","EmojiPickerWrapper","onEmojiSelect","pickerRef","React","picker","handleEmojiClick","event","unicode","addEventListener","removeEventListener","onSendMessage","currentUser","onMessageReceived","message","setMessage","showPicker","setShowPicker","previewImage","setPreviewImage","attachedFile","setAttachedFile","emojiPickerRef","fileInputRef","prev","emoji","URL","revokeObjectURL","value","onChange","e","AttachFileIcon","click","style","display","file","files","startsWith","imageUrl","createObjectURL","alert","SettingsVoiceIcon","handleSend","trim","SendIcon","setMessages","isOtherUserTyping","setIsOtherUserTyping","socket","typingTimeoutRef","url","WebSocket","onopen","onmessage","JSON","parse","senderId","user_id","prevMessages","timestamp","toISOString","messageIdToDelete","messageId","filter","clearTimeout","setTimeout","onerror","onclose","close","ChatHeader","Conversation","delete","deleteMessage","send","stringify","MessageInput","newMessage","formData","FormData","append","tempMessage","now","savedMessage","post","onTyping","handleTyping","onStopTyping","handleStopTyping","ModalComponent","title","open","setOpen","cypressTag","hideClose","Modal","onClose","handleClose","IconButton","CloseIcon","Heading","queryClient","QueryClient","defaultOptions","queries","useErrorBoundary","refetchOnWindowFocus","retry","editProfile","patch","userData","onImageDrop","initialImage","droppedImage","setDroppedImage","isDraggingOver","setIsDraggingOver","isZoomModalOpen","setIsZoomModalOpen","onDragOver","preventDefault","onDragLeave","onDrop","dataTransfer","accept","handleClick","document","getElementById","ProfilePage","setUser","modalNameOpen","setModalNameOpen","newName","setNewName","activeConversation","setActiveConversation","editProfileMutation","config","useMutation","mutationKey","mutationFn","onMutate","previousUserProfile","getQueryData","setQueryData","oldData","newData","onError","context","onSuccess","invalidateQueries","useEditProfile","replace","fetchUserProfile","handleImageDrop","useCallback","profileFields","label","date_of_birth","location","native_language","languages","learningGoal","dateJoined","Sidebar","color","ArrowBackIcon","ChatRoom","handleSignOut","DragDropImage","mutateAsync","err"],"sourceRoot":""}