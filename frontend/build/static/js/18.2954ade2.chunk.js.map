{"version":3,"file":"static/js/18.2954ade2.chunk.js","mappings":"wIAGO,SAASA,IAA6B,IAAD,IAAAC,EAAAC,UAAAC,OAAtBC,EAAM,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANF,EAAME,GAAAJ,UAAAI,GACxB,OAAOC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,GAAKJ,GACtB,C,sJCHK,SAASK,EAAoBC,GAClC,OAAOC,EAAAA,EAAAA,IAAqB,UAAWD,EACzC,EACoBE,EAAAA,EAAAA,GAAuB,UAAW,CAAC,S,aCOvD,MASMC,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,EAAO,CAC7BC,KAAM,UACNN,KAAM,OACNO,kBAAmBA,CAACC,EAAOC,IAAWA,EAAOC,MAH9BN,CAId,CACDO,SAAU,WAyDZ,EAvD0BC,EAAAA,YAAiB,SAAcC,EAASC,GAChE,MAAMN,GAAQO,EAAAA,EAAAA,GAAgB,CAC5BP,MAAOK,EACPP,KAAM,aAEF,UACJU,EAAS,OACTC,GAAS,KACNC,GACDV,EACEW,EAAa,IACdX,EACHS,UAEIG,EA9BkBD,KACxB,MAAM,QACJC,GACED,EAIJ,OAAOE,EAAAA,EAAAA,GAHO,CACZX,KAAM,CAAC,SAEoBX,EAAqBqB,EAAQ,EAuB1CE,CAAkBH,GAClC,OAAoBI,EAAAA,EAAAA,KAAKpB,EAAU,CACjCa,WAAWlB,EAAAA,EAAAA,GAAKsB,EAAQV,KAAMM,GAC9BQ,UAAWP,EAAS,OAAIQ,EACxBX,IAAKA,EACLK,WAAYA,KACTD,GAEP,ICtCO,SAASQ,EAAWC,GAKP,IAJlBC,MAAOC,EAAG,QACVC,EAAO,eACPC,EAAc,aACdC,GACeL,EACf,MAAMM,EAAY,GAAAC,OAAMC,EAAAA,EAAY,gCAGpC,OAFAH,EAAeG,EAAAA,EAAeH,GAG5BT,EAAAA,EAAAA,KAACa,EAAI,CAEHpB,WAAW1B,EAAAA,EAAAA,IACT,4JACA+C,UAEFd,EAAAA,EAAAA,KAAA,OAAKP,UAAU,uBAAsBqB,UACnCC,EAAAA,EAAAA,MAAA,OAAKtB,UAAU,8BAA6BqB,SAAA,EAE1Cd,EAAAA,EAAAA,KAAA,OACEgB,IAAKP,GAA8BC,EACnCO,IAAI,UACJC,QAAUC,IACRA,EAAEC,cAAcJ,IAAMN,CAAY,EAEpCjB,UAAU,kEAGZsB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEd,EAAAA,EAAAA,KAAA,KAAGP,UAAU,sCAAqCqB,SAAEP,KACpDP,EAAAA,EAAAA,KAAA,KAAGP,UAAU,uBAAsBqB,SAChCN,GAAkB,qBApBtBF,EA2BX,C,cC5CA,MA0CA,EA1CsBe,KACpB,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAwB,IAClDC,GAAWC,EAAAA,EAAAA,MA0BjB,OAzBAC,EAAAA,EAAAA,YAAU,KACUC,WAChB,IACE,MAAMC,OCPgBD,WAI5B,IACE,MAAME,EAAQC,eAAeC,QAAQ,eAC/BH,QAAiBI,MAAMC,EAAAA,EAAW,oBAAqB,CAC3DC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1B,OAAYmB,IAE3BQ,YAAa,YAGf,GAAIT,EAASU,GAAI,CACf,MAAMC,QAAkCX,EAASY,OAEjD,OADAC,QAAQC,IAAI,qCAAsCH,GAC3CA,CACT,CAAO,GAAwB,MAApBX,EAASe,OAElBb,eAAec,WAAW,eAC1BpB,EAAS,cACJ,CACL,MAAMqB,QAAkBjB,EAASY,OAEjCC,QAAQK,MAAM,0BAA2BD,EAAUC,MACrD,CACF,CAAE,MAAOA,GACPL,QAAQK,MAAM,0BAA2BA,EAC3C,GDvB6BC,CAAevB,GACtC,GAAY,OAARI,QAAQ,IAARA,GAAAA,EAAUP,SAAU,CACtB,MAAM2B,EAAiCpB,EAASP,SAAS4B,KACtDC,IAAY,CACXC,SAAUD,EAAQC,SAClBC,SACEF,EAAQG,mBACR,sCACF9C,eAAgB2C,EAAQI,oBAG5BhC,EAAY0B,EACd,MACEP,QAAQK,MAAM,iCAAkClB,EAEpD,CAAE,MAAOkB,GACPL,QAAQK,MAAM,+BAAgCA,EAChD,GAEFS,EAAW,GACV,KAGDxD,EAAAA,EAAAA,KAAA,OAAKP,UAAU,6BAA4BqB,SACxCQ,EAAS4B,KAAI,CAACC,EAAS9C,KACtBL,EAAAA,EAAAA,KAACG,EAAW,CAEVI,QAAS4C,EAAQC,SACjB5C,eAAgB2C,EAAQ3C,eACxBC,aAAc0C,EAAQE,UAHjBhD,MAML,C","sources":["libs/utils.ts","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js","components/Cards/Card.tsx","pages/Community/page.tsx","pages/Community/api/getProfileData.ts"],"sourcesContent":["import clsx, { ClassValue } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n    return twMerge(clsx(inputs));\r\n  }","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import { BASE_URL_IMG } from \"../../constants/constants\";\r\nimport { cn } from \"../../libs/utils\";\r\nimport { Card } from \"@mui/material\";\r\n\r\ninterface ProfileCardDTO {\r\n  content: string;\r\n  nativeLanguage?: string;\r\n  profileImage?: string;\r\n  index?: number;\r\n  isDragging?: boolean;\r\n}\r\n\r\nexport function ProfileCard({\r\n  index: key,\r\n  content,\r\n  nativeLanguage,\r\n  profileImage,\r\n}: ProfileCardDTO) {\r\n  const defaultImage = `${BASE_URL_IMG}profile_images/MainAfter.jpg`;\r\n  profileImage = BASE_URL_IMG + profileImage;\r\n\r\n  return (\r\n    <Card\r\n      key={key}\r\n      className={cn(\r\n        \"space-y-6 max-w-[350px] h-full p-4 border border-gray-200 rounded-xl shadow-lg hover:shadow-2xl transition-shadow duration-200 transform hover:scale-105\"\r\n      )}\r\n    >\r\n      <div className=\"p-2 space-y-5 h-full\">\r\n        <div className=\"flex items-center space-x-4\">\r\n          {/* Profile Image */}\r\n          <img\r\n            src={profileImage ? profileImage : defaultImage}\r\n            alt=\"Profile\"\r\n            onError={(e) => {\r\n              e.currentTarget.src = defaultImage;\r\n            }}\r\n            className=\"w-20 h-20 rounded-full border-2 border-gray-300 object-cover\"\r\n          />\r\n          {/* Profile Content */}\r\n          <div>\r\n            <p className=\"font-semibold text-lg text-gray-800\">{content}</p>\r\n            <p className=\"italic text-gray-500\">\r\n              {nativeLanguage || \"Unknown\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { ProfileCard } from \"../../components/Cards/Card\";\r\nimport { getProfileData } from \"./api/getProfileData\";\r\nimport { ProfileData } from \"./types\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CommunityPage = () => {\r\n  const [profiles, setProfiles] = useState<ProfileData[]>([]);\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await getProfileData(navigate);\r\n        if (response?.profiles) {\r\n          const transformedData: ProfileData[] = response.profiles.map(\r\n            (profile: any) => ({\r\n              username: profile.username,\r\n              imageURL:\r\n                profile.profile_image_url ||\r\n                \"/media/profile_images/MainAfter.jpg\",\r\n              nativeLanguage: profile.native_language,\r\n            })\r\n          );\r\n          setProfiles(transformedData);\r\n        } else {\r\n          console.error(\"Unexpected response structure:\", response);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching profile data:\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-3 gap-4 p-4\">\r\n      {profiles.map((profile, index) => (\r\n        <ProfileCard\r\n          key={index}\r\n          content={profile.username}\r\n          nativeLanguage={profile.nativeLanguage}\r\n          profileImage={profile.imageURL}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunityPage;\r\n","// api/userApi.ts\r\nimport { ProfileResponse } from \"../types\";\r\nimport { NavigateFunction } from \"react-router-dom\";\r\nimport { BASE_URL } from \"../../../constants/constants\";\r\n\r\nexport const getProfileData = async (\r\n \r\n  navigate: NavigateFunction // Pass navigate as an argument\r\n): Promise<ProfileResponse | void> => {\r\n  try {\r\n    const token = sessionStorage.getItem(\"accessToken\");\r\n    const response = await fetch(BASE_URL + \"/api/profile/data\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n      credentials: \"include\",\r\n    });\r\n\r\n    if (response.ok) {\r\n      const userData: ProfileResponse = await response.json();\r\n      console.log(\"User profile fetched successfully:\", userData);\r\n      return userData;\r\n    } else if (response.status === 401) {\r\n      // If unauthorized, clear the token and navigate to login\r\n      sessionStorage.removeItem(\"accessToken\");\r\n      navigate(\"/login\");\r\n    } else {\r\n      const errorData = await response.json();\r\n      \r\n      console.error(\"Error fetching profile:\", errorData.error);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error fetching profile:\", error);\r\n  }\r\n};\r\n"],"names":["cn","_len","arguments","length","inputs","Array","_key","twMerge","clsx","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","CardRoot","styled","Paper","name","overridesResolver","props","styles","root","overflow","React","inProps","ref","useDefaultProps","className","raised","other","ownerState","classes","composeClasses","useUtilityClasses","_jsx","elevation","undefined","ProfileCard","_ref","index","key","content","nativeLanguage","profileImage","defaultImage","concat","BASE_URL_IMG","Card","children","_jsxs","src","alt","onError","e","currentTarget","CommunityPage","profiles","setProfiles","useState","navigate","useNavigate","useEffect","async","response","token","sessionStorage","getItem","fetch","BASE_URL","method","headers","Authorization","credentials","ok","userData","json","console","log","status","removeItem","errorData","error","getProfileData","transformedData","map","profile","username","imageURL","profile_image_url","native_language","fetchData"],"sourceRoot":""}